#!/bin/bash

# Color definitions
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[1;33m'
reset='\033[0m'

# Valid Script
ipsaya=$(curl -sS ipv4.icanhazip.com)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")

# Variables
ip=$(wget -qO- ipv4.icanhazip.com)
srv_date=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date=$(date +"%Y-%m-%d" -d "$srv_date")
ip_url="https://ip.yha.my.id/ip"
city=$(cat /etc/xray/city 2>/dev/null || echo "Unknown city")
pubkey=$(cat /etc/slowdns/server.pub 2>/dev/null || echo "Pubkey not available")
domain=$(cat /etc/xray/domain 2>/dev/null || hostname -f)
# uuid=$(cat /proc/sys/kernel/random/uuid)

clear

# User data input
echo -e "══════════════════════════════════════════════════════════════════════"
echo -e "                       Tambah Akun Xray VMess"
echo -e "══════════════════════════════════════════════════════════════════════"

while true; do
    read -p "   Nama: " user
    if [[ ${#user} -lt 3 || ! "$user" =~ ^[a-zA-Z0-9_-]+$ ]]; then
        printf "\033[1A\033[0J"
        echo -e "${red}   Nama pengguna tidak boleh kosong${reset}"
        continue
    fi
    if grep -q "^### $user " /etc/xray/vmess/config.json; then
        random_number=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 5)
        user="${random_number}${user}"
        echo -e "${yellow}   Nama pengguna sudah ada. Menggunakan nama baru: $user${reset}"
        break
    else
        break
    fi
done


read -p "   Kata sandi/UUID: " uuid


until [[ $duration =~ ^[0-9]+$ ]]; do
    read -p "   Masa aktif (hari): " duration
    if [[ -z "$duration" ]]; then
        echo -e "${red}   Masa aktif tidak boleh kosong${reset}"
    fi
done
until [[ $quota =~ ^[0-9]+$ ]]; do
    read -p "   Kuota Pengguna (GB): " quota
    if [[ -z "$quota" ]]; then
        echo -e "${red}   Kuota pengguna tidak boleh kosong${reset}"
    fi
done
until [[ $ip_limit =~ ^[0-9]+$ ]]; do
    read -p "   Batas Perangkat (IP): " ip_limit
    if [[ -z "$ip_limit" ]]; then
        echo -e "${red}   Batas IP tidak boleh kosong${reset}"
    fi
done

# Function to send Telegram notification
send_telegram_notification() {
    local status="$1"
    local user="$2"
    local error_msg="$3"
    
    if [ -f '/root/.vars' ]; then
        source '/root/.vars'
        
    if [ "$status" == "success" ]; then
        message="
<b>🚀 Alrescha79 Panel VPN 🚀</b>
<b>══════════════════════════════════════════════════════════════════════</b>
<b>✅ AKUN VMESS BERHASIL DIBUAT</b>
<b>══════════════════════════════════════════════════════════════════════</b>
<b>👤 Username:</b> <code>$user</code>
<b>🆔 User ID:</b> <code>$uuid</code>
<b>🌐 Host:</b> <code>$domain</code>
<b>📍 Location:</b> <code>$city</code>
<b>🔒 Port TLS:</b> <code>443</code>
<b>🔓 Port Non-TLS:</b> <code>80, 8080</code>
<b>🔧 Port GRPC:</b> <code>443</code>
<b>🔐 Security:</b> <code>auto</code>
<b>🌐 Network:</b> <code>WS/gRPC</code>
<b>📝 Path:</b> <code>/whatever/vmess</code>
<b>⚙️ Service Name:</b> <code>vmess-grpc</code>
<b>📊 Quota:</b> <code>${quota} GB</code>
<b>🔢 IP Limit:</b> <code>$ip_limit</code>
<b>⏰ Expires:</b> <code>$exp</code>
<b>══════════════════════════════════════════════════════════════════════</b>
<b>🔗 TLS Link:</b>
<code>$vmess_tls</code>
<b>══════════════════════════════════════════════════════════════════════</b>
<b>🔗 Non-TLS Link:</b>
<code>$vmess_non</code>
<b>══════════════════════════════════════════════════════════════════════</b>
<b>🔗 GRPC Link:</b>
<code>$vmess_grpc</code>
<b>══════════════════════════════════════════════════════════════════════</b>
<b>🌟 Alrescha79 Panel VPN 🌟</b>
"
    else
        message="
<b>🚀 Alrescha79 Panel VPN 🚀</b>
<b>══════════════════════════════════════════════════════════════════════</b>
<b>❌ GAGAL MEMBUAT AKUN VMESS</b>
<b>══════════════════════════════════════════════════════════════════════</b>
<b>👤 Nama Pengguna:</b> <code>$user</code>
<b>🆔 ID Pengguna:</b> <code>$uuid</code>
<b>🌐 Host:</b> <code>$domain</code>
<b>❗ Kesalahan:</b> <code>$error_msg</code>
<b>══════════════════════════════════════════════════════════════════════</b>
<b>🌟 Alrescha79 Panel VPN 🌟</b>
"
        fi
        
        curl -s -X POST "https://api.telegram.org/bot$bot_token/sendMessage" \
            -d "chat_id=$telegram_id" \
            -d "parse_mode=HTML" \
            --data-urlencode "text=$message" > /dev/null 2>&1
    fi
}

# Account creation process
exp=$(date -d "$duration days" +"%Y-%m-%d")
if [ ! -f "/etc/xray/vmess/config.json" ]; then
    echo "File konfigurasi tidak ditemukan. Membuat file baru..."
    echo '{"inbounds": []}' >/etc/xray/vmess/config.json
fi

if ! sed -i '/#vmess$/a\### '"$user $exp"'\
},{"id": '"""$uuid"""',"email": '"""$user"""' /etc/xray/vmess/config.json; then
    echo -e "${red}Gagal menambahkan pengguna ke config.json${reset}"
    send_telegram_notification "error" "$user" "Gagal menambahkan pengguna ke config.json"
    exit 1
fi
if ! sed -i '/#vmessgrpc$/a\### '"$user $exp"'\
},{"id": '"""$uuid"""',"email": '"""$user"""' /etc/xray/vmess/config.json; then
    echo -e "${red}Gagal menambahkan pengguna ke config.json (GRPC)${reset}"
    send_telegram_notification "error" "$user" "Gagal menambahkan pengguna ke config.json (GRPC)"
    exit 1
fi

# Create configuration files
cat >/etc/xray/vmess/$user-tls.json <<EOF
{
    "v": "2",
    "ps": "$user WS (CDN) TLS",
    "add": "${domain}",
    "port": "443",
    "id": "${uuid}",
    "aid": "0",
    "net": "ws",
    "path": "/whatever/vmess",
    "type": "none",
    "host": "${domain}",
    "tls": "tls"
}
EOF

# Check if TLS configuration file was created successfully
if [ ! -f "/etc/xray/vmess/$user-tls.json" ]; then
    echo -e "${red}Gagal membuat file konfigurasi TLS${reset}"
    send_telegram_notification "error" "$user" "Gagal membuat file konfigurasi TLS"
    exit 1
fi

cat >/etc/xray/vmess/$user-non.json <<EOF
{
    "v": "2",
    "ps": "$user WS (CDN) NTLS",
    "add": "${domain}",
    "port": "80",
    "id": "${uuid}",
    "aid": "0",
    "net": "ws",
    "path": "/whatever/vmess",
    "type": "none",
    "host": "${domain}",
    "tls": "none"
}
EOF

# Check if Non-TLS configuration file was created successfully
if [ ! -f "/etc/xray/vmess/$user-non.json" ]; then
    echo -e "${red}Gagal membuat file konfigurasi Non-TLS${reset}"
    send_telegram_notification "error" "$user" "Gagal membuat file konfigurasi Non-TLS"
    exit 1
fi

cat >/etc/xray/vmess/$user-grpc.json <<EOF
{
    "v": "2",
    "ps": "$user (SNI) GRPC",
    "add": "${domain}",
    "port": "443",
    "id": "${uuid}",
    "aid": "0",
    "net": "grpc",
    "path": "vmess-grpc",
    "type": "none",
    "host": "${domain}",
    "tls": "tls"
}
EOF

# Check if GRPC configuration file was created successfully
if [ ! -f "/etc/xray/vmess/$user-grpc.json" ]; then
    echo -e "${red}Gagal membuat file konfigurasi gRPC${reset}"
    send_telegram_notification "error" "$user" "Gagal membuat file konfigurasi gRPC"
    exit 1
fi

# Create configuration file for OpenClash
cat >/var/www/html/vmess-$user.txt <<-END
══════════════════════════════════════════════════════════════════════
# Format Vmess WS (CDN)
══════════════════════════════════════════════════════════════════════

- name: Vmess-$user-WS (CDN)
  type: vmess
  server: ${domain}
  port: 443
  uuid: ${uuid}
  alterId: 0
  cipher: auto
  udp: true
  tls: true
  skip-cert-verify: true
  servername: ${domain}
  network: ws
  ws-opts:
    path: /whatever/vmess
    headers:
      Host: ${domain}
══════════════════════════════════════════════════════════════════════
# Format Vmess WS (CDN) Non TLS
══════════════════════════════════════════════════════════════════════

- name: Vmess-$user-WS (CDN) Non TLS
  type: vmess
  server: ${domain}
  port: 80
  uuid: ${uuid}
  alterId: 0
  cipher: auto
  udp: true
  tls: false
  skip-cert-verify: false
  servername: ${domain}
  network: ws
  ws-opts:
    path: /whatever/vmess
    headers:
      Host: ${domain}
══════════════════════════════════════════════════════════════════════
# Format Vmess gRPC (SNI)
══════════════════════════════════════════════════════════════════════

- name: Vmess-$user-gRPC (SNI)
  server: ${domain}
  port: 443
  type: vmess
  uuid: ${uuid}
  alterId: 0
  cipher: auto
  network: grpc
  tls: true
  servername: ${domain}
  skip-cert-verify: true
  grpc-opts:
    grpc-service-name: vmess-grpc

══════════════════════════════════════════════════════════════════════
# Vmess Account Links
══════════════════════════════════════════════════════════════════════
TLS Link : vmess://$(base64 -w 0 /etc/xray/vmess/$user-tls.json)
══════════════════════════════════════════════════════════════════════
Non-TLS Link : vmess://$(base64 -w 0 /etc/xray/vmess/$user-non.json)
══════════════════════════════════════════════════════════════════════
GRPC Link : vmess://$(base64 -w 0 /etc/xray/vmess/$user-grpc.json)
══════════════════════════════════════════════════════════════════════

END

# Check if OpenClash configuration file was created successfully
if [ ! -f "/var/www/html/vmess-$user.txt" ]; then
    echo -e "${red}Gagal membuat file konfigurasi OpenClash${reset}"
    send_telegram_notification "error" "$user" "Gagal membuat file konfigurasi OpenClash"
    exit 1
fi

# Generate Vmess links
vmess_tls="vmess://$(base64 -w 0 /etc/xray/vmess/$user-tls.json)"
vmess_non="vmess://$(base64 -w 0 /etc/xray/vmess/$user-non.json)"
vmess_grpc="vmess://$(base64 -w 0 /etc/xray/vmess/$user-grpc.json)"

# Restart service
if ! systemctl restart vmess@config; then
    echo -e "${red}Gagal memulai ulang layanan VMess${reset}"
    send_telegram_notification "error" "$user" "Gagal memulai ulang layanan VMess"
    exit 1
fi

# Exception if configuration file doesn't exist
if [ ! -f "/etc/xray/vmess/config.json" ]; then
    echo "Peringatan: File konfigurasi VMess tidak ditemukan. Membuat file baru..."
    mkdir -p /etc/xray/vmess
    echo '{"inbounds": []}' >/etc/xray/vmess/config.json
    systemctl restart vmess@config
fi

# Create directory if it doesn't exist
if [ ! -d "/etc/xray/vmess" ]; then
    echo "Direktori /etc/xray/vmess tidak ditemukan. Membuat direktori..."
    mkdir -p /etc/xray/vmess
    if [ $? -ne 0 ]; then
    echo "Gagal membuat direktori /etc/xray/vmess. Pastikan Anda memiliki izin yang cukup."
    send_telegram_notification "error" "$user" "Gagal membuat direktori /etc/xray/vmess"
        exit 1
    fi
fi

# Exception if configuration file doesn't exist
if [ ! -f "/etc/xray/vmess/config.json" ]; then
    echo "File konfigurasi VMess tidak ditemukan. Membuat file baru..."
    echo '{"inbounds": []}' >/etc/xray/vmess/config.json
    if [ $? -ne 0 ]; then
    echo "Gagal membuat file konfigurasi VMess. Pastikan Anda memiliki izin yang cukup."
    send_telegram_notification "error" "$user" "Gagal membuat file konfigurasi VMess"
        exit 1
    fi
fi

# Set default values if empty
ip_limit=${ip_limit:-0}
quota=${quota:-0}

# Convert Quota to bytes
quota_bytes=$((${quota} * 1024 * 1024 * 1024))

# Save quota and IP limit data
if [[ ${quota} != "0" ]]; then
    echo "${quota_bytes}" >/etc/xray/vmess/${user}
    echo "${ip_limit}" >/etc/xray/vmess/${user}IP
fi

# Update database
db_file="/etc/xray/vmess/.vmess.db"
temp_file="/etc/xray/vmess/.vmess.db.tmp"

# Exception if database file doesn't exist
if [ ! -f "$db_file" ]; then
    echo "Peringatan: File database VMess tidak ditemukan. Membuat file baru..."
    touch "$db_file"
fi

# Remove old entry if exists
grep -v "^### ${user} " "$db_file" >"$temp_file"
mv "$temp_file" "$db_file"

# Add new entry
echo "### ${user} ${exp} ${uuid}" >>"$db_file"

# Send success notification to Telegram
send_telegram_notification "success" "$user"

# Save original log
{
    echo "══════════════════════════════════════════════════════════════════════"
    echo "Xray/Vmess Account    "
    echo "══════════════════════════════════════════════════════════════════════"
    echo "remarks      : ${user}"
    echo "host_server  : ${domain}"    
    echo "location     : $city"
    echo "location     : $kota"
    echo "port_tls     : 443"
    echo "port_nontls  : 80, 8080"
    echo "port_dns     : 443, 53"
    echo "port_grpc    : 443"
    echo "alterid      : 0"
    echo "security     : auto"
    echo "network      : WS or gRPC"
    echo "path         : /whatever/vmess"
    echo "servicename  : vmess-grpc"
    echo "user_id      : ${uuid}"
    echo "public_key   : ${pubkey}"
    echo "══════════════════════════════════════════════════════════════════════"
    echo "tls_link     : ${vmess_tls}"
    echo "══════════════════════════════════════════════════════════════════════"
    echo "ntls_link    : ${vmess_non}"
    echo "══════════════════════════════════════════════════════════════════════"
    echo "grpc_link    : ${vmess_grpc}"
    echo "══════════════════════════════════════════════════════════════════════"
    echo "openclash_format : https://${domain}:81/vmess-$user.txt"
    echo "══════════════════════════════════════════════════════════════════════"
    echo "expires_on   : $exp"
    echo ""
} >> /etc/xray/vmess/log-create-${user}.log

# Display account information
clear 
echo -e "══════════════════════════════════════════════════════════════════════"
echo -e "Xray/Vmess Account    "
echo -e "══════════════════════════════════════════════════════════════════════"
echo -e "Remarks      : ${user}"
echo -e "Host Server  : ${domain}"
echo -e "Location     : $city"
echo -e "Port TLS     : 443"
echo -e "Port non TLS : 80, 8080"
echo -e "Port DNS     : 443, 53"
echo -e "Port GRPC    : 443"
echo -e "AlterId      : 0"
echo -e "Security     : auto"
echo -e "Network      : WS or gRPC"
echo -e "Path         : /whatever/vmess "
echo -e "ServiceName  : vmess-grpc"
echo -e "User ID      : ${uuid}"
echo -e "Public Key   : ${pubkey}"
echo -e "══════════════════════════════════════════════════════════════════════"
echo -e "TLS Link    : ${vmess_tls}"
echo -e "══════════════════════════════════════════════════════════════════════"
echo -e "NTLS Link   : ${vmess_non}"
echo -e "══════════════════════════════════════════════════════════════════════"
echo -e "GRPC Link   : ${vmess_grpc}"
echo -e "══════════════════════════════════════════════════════════════════════"
echo -e "OpenClash Format : https://${domain}:81/vmess-$user.txt"
echo -e "══════════════════════════════════════════════════════════════════════"
echo -e "Expires On  : $exp"
