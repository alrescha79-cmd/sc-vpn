#!/bin/bash

# Valid Script
ipsaya=$(curl -sS ipv4.icanhazip.com)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")


# colors
red="\e[91m"
green="\e[92m"
yellow="\e[93m"
blue="\e[94m"
purple="\e[95m"
cyan="\e[96m"
white="\e[97m"
reset="\e[0m"

# Function to print rainbow text
print_rainbow() {
    local text="$1"
    local length=${#text}
    local start_color=(255 255 0) # yellow
    local mid_color=(0 255 0)     # green
    local end_color=(255 255 0)   # yellow

    for ((i = 0; i < length; i++)); do
        local progress=$((i * 100 / (length - 1)))

        if [ $progress -lt 50 ]; then
            local factor=$((progress * 2))
            r=$((start_color[0] * (100 - factor) / 100 + mid_color[0] * factor / 100))
            g=$((start_color[1] * (100 - factor) / 100 + mid_color[1] * factor / 100))
            b=$((start_color[2] * (100 - factor) / 100 + mid_color[2] * factor / 100))
        else
            local factor=$(((progress - 50) * 2))
            r=$((mid_color[0] * (100 - factor) / 100 + end_color[0] * factor / 100))
            g=$((mid_color[1] * (100 - factor) / 100 + end_color[1] * factor / 100))
            b=$((mid_color[2] * (100 - factor) / 100 + end_color[2] * factor / 100))
        fi

        printf "\e[38;2;%d;%d;%dm%s" "$r" "$g" "$b" "${text:$i:1}"
    done
    echo -e "$reset"
}

# Function to send Telegram notification
send_telegram_notification() {
    local status="$1"
    local user="$2"
    local error_msg="$3"
    
    if [ -f '/root/.vars' ]; then
        source '/root/.vars'
        
        if [ "$status" == "success" ]; then
            message="
<b>🚀 Alrescha79 Panel VPN 🚀</b>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>✅ SHADOWSOCKS ACCOUNT DELETED</b>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>👤 Username:</b> <code>$user</code>
<b>🌐 Host:</b> <code>$domain</code>
<b>⏰ Deleted Date:</b> <code>$(date '+%Y-%m-%d %H:%M:%S')</code>
<b>✅ Status:</b> <code>Successfully Deleted</code>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>🌟 Alrescha79 Panel VPN 🌟</b>
"
        else
            message="
<b>🚀 Alrescha79 Panel VPN 🚀</b>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>❌ SHADOWSOCKS ACCOUNT DELETION FAILED</b>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>👤 Username:</b> <code>$user</code>
<b>🌐 Host:</b> <code>$domain</code>
<b>❗ Error:</b> <code>$error_msg</code>
<b>━━━━━━━━━━━━━━━━━━</b>
<b>🌟 Alrescha79 Panel VPN 🌟</b>
"
        fi
        
        curl -s -X POST "https://api.telegram.org/bot$bot_token/sendMessage" \
            -d "chat_id=$telegram_id" \
            -d "parse_mode=HTML" \
            -d "text=$message" > /dev/null 2>&1
    fi
}

# variables
domain=$(cat /etc/xray/domain 2>/dev/null || hostname -f)
clear
print_rainbow "┌─────────────────────────────────────────┐"
print_rainbow "│       DELETE SHADOWSOCKS ACCOUNT        │"
print_rainbow "└─────────────────────────────────────────┘"

account_count=$(grep -c -E "^### " "/etc/xray/shadowsocks/.shadowsocks.db")
if [[ ${account_count} == '0' ]]; then
    echo ""
    echo "  no customer names available"
    echo ""
    exit 0
fi

while true; do
    echo -e "${yellow}Select account to delete:${reset}"
    echo -e "${green}1) Choose by number${reset}"
    echo -e "${green}2) Type username manually${reset}"
    read -p "Pilih [ 1-2 ] atau [ x ] untuk batal: " delete_choice
    
    if [[ $delete_choice == "1" || $delete_choice == "2" ]]; then
        break
    elif [[ $delete_choice =~ ^[xX]$ ]]; then
        echo -e "${yellow}Batal menghapus akun. Kembali ke menu...${reset}"
        menushadowsocks
        exit 0
    else
        echo -e "${red}Invalid choice! Please select 1 or 2.${reset}"
        echo -e "${yellow}Press Enter to try again...${reset}"
        read
        clear
        print_rainbow "┌─────────────────────────────────────────┐"
        print_rainbow "│       DELETE SHADOWSOCKS ACCOUNT        │"
        print_rainbow "└─────────────────────────────────────────┘"
    fi
done
if [[ $delete_choice == "1" ]]; then
    clear
    print_rainbow "┌─────────────────────────────────────────┐"
    print_rainbow "│       DELETE SHADOWSOCKS ACCOUNT        │"
    print_rainbow "└─────────────────────────────────────────┘"
            echo " ┌────┬────────────────────┬─────────────┐"
            echo " │ no │ username           │     exp     │"
            echo " ├────┼────────────────────┼─────────────┤"
    grep -E "^### " "/etc/xray/shadowsocks/.shadowsocks.db" | awk '{
        cmd = "date -d \"" $3 "\" +%s"
        cmd | getline exp_timestamp
        close(cmd)
        current_timestamp = systime()
        days_left = int((exp_timestamp - current_timestamp) / 86400)
        if (days_left < 0) days_left = 0
        printf " │ %-2d │ %-18s │ %-11s │\n", NR, $2, days_left " days"
    }'
    echo " └────┴────────────────────┴─────────────┘"
    
fi

case $delete_choice in
    1)
        until [[ ${account_number} -ge 1 && ${account_number} -le ${account_count} ]]; do
            read -rp "Choose account number [1-${account_count}]: " account_number
        done
        user=$(grep -E "^### " "/etc/xray/shadowsocks/.shadowsocks.db" | cut -d ' ' -f 2 | sed -n "${account_number}p")
        exp=$(grep -E "^### " "/etc/xray/shadowsocks/.shadowsocks.db" | cut -d ' ' -f 3 | sed -n "${account_number}p")
        echo ""
        print_rainbow "┌─────────────────────────────────────────┐"
        print_rainbow "│            SELECTED ACCOUNT             │"
        print_rainbow "└─────────────────────────────────────────┘"
        echo -e "Username     : ${green}$user${reset}"
        echo -e "Expiry       : ${yellow}$exp${reset}"
        echo ""
        sleep 2
        ;;
    2)
        while true; do
            read -rp "enter username: " user
            if grep -qE "^### $user " "/etc/xray/shadowsocks/.shadowsocks.db"; then
                exp=$(grep -E "^### $user " "/etc/xray/shadowsocks/.shadowsocks.db" | cut -d ' ' -f 3)
                echo -e "${green}Username found: $user (Expiry: $exp)${reset}"
                break
            else
                echo -e "${red}Username '$user' not found!${reset}"
                echo -e "${yellow}Please try again or press Ctrl+C to cancel.${reset}"
                echo ""
            fi
        done
        ;;
    *)
        echo -e "${red}Error: Invalid choice${reset}"
        exit 1
        ;;
esac

# Delete user from config and database
if ! sed -i "/^### $user $exp/,/^},{/d" /etc/xray/shadowsocks/config.json; then
    echo "Error: Failed to remove user from config.json"
    send_telegram_notification "error" "$user" "Failed to remove user from config.json"
    exit 1
fi

if ! sed -i "/^### $user $exp/d" /etc/xray/shadowsocks/.shadowsocks.db; then
    echo "Error: Failed to remove user from database"
    send_telegram_notification "error" "$user" "Failed to remove user from database"
    exit 1
fi

# Remove user files
if [ -f "/etc/xray/shadowsocks/log-create-${user}.log" ]; then
    rm -f "/etc/xray/shadowsocks/log-create-${user}.log"
    rm -f "/etc/xray/shadowsocks/${user}-non.json"
    rm -f "/etc/xray/shadowsocks/${user}-tls.json"
    rm -f "/etc/xray/shadowsocks/${user}-grpc.json"
fi

if ! systemctl restart shadowsocks@config >/dev/null 2>&1; then
    echo "Warning: Failed to restart shadowsocks service. Please check system logs for more information."
    echo "However, the account has been successfully removed from the database."
    send_telegram_notification "error" "$user" "Failed to restart shadowsocks service, but account deleted"
else
    # Send success notification
    send_telegram_notification "success" "$user"
fi

clear
print_rainbow "┌─────────────────────────────────────────┐"
print_rainbow "│       DELETE SHADOWSOCKS ACCOUNT        │"
print_rainbow "└─────────────────────────────────────────┘"
echo -e "username     : ${green}$user${reset}"
echo -e "account has been permanently deleted"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menushadowsocks
